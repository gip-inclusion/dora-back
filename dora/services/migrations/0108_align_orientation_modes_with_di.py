# Generated by Django 4.2.12 on 2024-07-16 14:25

from django.db import migrations

# Mapping du renommage des modes d'orientation accompagnateur
COACH_ORIENTATION_MODE_VALUE_MAPPING = [
    {"old": "formulaire-externe", "new": "completer-le-formulaire-dadhesion"},
    {"old": "envoyer-courriel", "new": "envoyer-un-mail"},
    {
        "old": "envoyer-fiche-prescription",
        "new": "envoyer-un-mail-avec-une-fiche-de-prescription",
    },
]


# Mapping du renommage des modes d'orientation bénéficiaire
BENEFICIARY_ACCESS_MODE_VALUE_MAPPING = [
    {"old": "envoyer-courriel", "new": "envoyer-un-mail"},
    {
        "old": "formulaire-externe",
        "new": "completer-le-formulaire-dadhesion",
    },
]


def rename_orientation_mode_values(OrientationMode, value_mapping, reverse):
    for value in value_mapping:
        # Inversion des valeurs en cas de migration inverse
        old_value = value["new" if reverse else "old"]
        new_value = value["old" if reverse else "new"]
        # Renommage des valeurs des modes d'orientation dans la table des modes d'orientation
        OrientationMode.objects.filter(value=old_value).update(value=new_value)


def rename_orientation_modes(apps, schema_editor, reverse):
    # Récupération des modèles des modes d'orientation
    CoachOrientationMode = apps.get_model("services", "CoachOrientationMode")
    BeneficiaryAccessMode = apps.get_model("services", "BeneficiaryAccessMode")

    # Renommage des valeurs des modes d'orientation accompagnateur
    rename_orientation_mode_values(
        CoachOrientationMode,
        COACH_ORIENTATION_MODE_VALUE_MAPPING,
        reverse,
    )

    # Renommage des valeurs des modes d'orientation bénéficiaire
    rename_orientation_mode_values(
        BeneficiaryAccessMode,
        BENEFICIARY_ACCESS_MODE_VALUE_MAPPING,
        reverse,
    )


def migration(apps, schema_editor):
    rename_orientation_modes(apps, schema_editor, False)


def migration_reverse(apps, schema_editor):
    rename_orientation_modes(apps, schema_editor, True)


class Migration(migrations.Migration):
    dependencies = [
        (
            "services",
            "0107_service_beneficiaries_access_modes_external_form_link_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(migration, reverse_code=migration_reverse),
    ]
