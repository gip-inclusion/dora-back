# Generated by Django 3.2.12 on 2022-03-18 20:00

from django.db import migrations

CATEGORIES_MAP = {
    "CR": "creation-activite",
    "DI": "numerique",
    "EQ": "equipement-alimentation",
    "FA": "famille",
    "FI": "difficultes-financieres",
    "FL": "apprendre-francais",
    "GL": "acc-global-indiv",
    "HA": "handicap",
    "HE": "sante",
    "HO": "logement-hebergement",
    "IL": "illettrisme",
    "JO": "emploi",
    "MO": "mobilite",
    "RE": "remobilisation",
    "RI": "acces-aux-droits",
}

SUBCATEGORIES_MAP = {
    "CR-EL": "creation-activite--elaborer-projet",
    "CR-ID": "creation-activite--de-lidee-au-projet",
    "CR-ST": "creation-activite--demarrer-activite",
    "DI-AD": "numerique--realiser-demarche-en-ligne",
    "DI-BA": "numerique--prendre-en-main-equipement-informatique",
    "DI-CH": "numerique--accompagner-enfant",
    "DI-CN": "numerique--creer-gerer-contenus-numeriques",
    "DI-CO": "numerique--echanger-avec-proches",
    "DI-EM": "numerique--usage-courriels",
    "DI-JO": "numerique--trouver-emploi-formation",
    "DI-NA": "numerique--naviguer-internet",
    "DI-PH": "numerique--utiliser-smartphone",
    "DI-WD": "numerique--connaitre-env-numerique",
    "DI-WP": "numerique--bases-traitement-texte",
    "EQ_APPLIANCE": "equipement-alimentation--electromenager",
    "EQ_CLOTH": "equipement-alimentation--habillement",
    "EQ_COMP": "equipement-alimentation--acces-materiel-informatique",
    "EQ_FOOD": "equipement-alimentation--alimentation",
    "EQ_PHONE": "equipement-alimentation--acces-telephone",
    "FA_CHILD": "famille--garde-enfants",
    "FA_NOFAM": "famille--jeune-sans-soutien-familial",
    "FA_PARENT": "famille--accompagnement-parents",
    "FA_SUPPORT": "famille--soutien-familles",
    "FA_VIOLENCE": "famille--violences-intrafamiliales",
    "FI_ACCOUNT": "difficultes-financieres--utilisation-compte-bancaire",
    "FI_BUDGET": "difficultes-financieres--gerer-budget",
    "FI_DEBT": "difficultes-financieres--prevention-surendettement",
    "FI_HELP": "difficultes-financieres--accompagnement-difficultes-financieres",
    "FL-CO": "apprendre-francais--communiquer-vie-tous-les-jours",
    "FL-FO": "apprendre-francais--suivre-formation",
    "FL-IN": "apprendre-francais--accompagnement-insertion-pro",
    "HA_ACC": "handicap--accompagnement-structure-specialisee",
    "HA_DESK": "handicap--adaptation-poste-travail",
    "HA_HOUSING": "handicap--adapter-logement",
    "HA_RECOG": "handicap--faire-reconnaitre-handicap",
    "HA_RIGHTS": "handicap--connaissance-droits-travailleurs",
    "HA_WORK": "handicap--retour-maintien-emploi",
    "HE_ADDICT": "sante--addiction",
    "HE_CURE": "sante--soin-prevention-maladie",
    "HE_EXPENSE": "sante--prise-en-charge-frais-medicaux",
    "HE_PSY": "sante--bien-etre-psy",
    "HO_AD": "logement-hebergement--adapter-logement",
    "HO_MO": "logement-hebergement--demenagement",
    "HO_WK": "logement-hebergement--reprendre-emploi-formation",
    "HO-AC": "logement-hebergement--acommpagnement-logement",
    "HO-KE": "logement-hebergement--probleme-logement",
    "HO-SH": "logement-hebergement--mal-loge-sans-logis",
    "IL_AUTONOMY": "illettrisme--etre-autonome",
    "IL_CLEA": "illettrisme--valider-certification-clea",
    "IL_DEFECT": "illettrisme--surmonter-trouble-apprentissage",
    "IL_DETECT": "illettrisme--reperer-situation-illettrisme",
    "IL_DIGITAL": "illettrisme--utiliser-numerique",
    "IL_DRIVING": "illettrisme--permis-conduire",
    "IL_INFO": "illettrisme--info-acquisition-connaissances",
    "IL_JOB": "illettrisme--trouver-emploi-formation",
    "IL_SCHOOL": "illettrisme--accompagner-scolarite",
    "IL_VOCAB": "illettrisme--ameliorer-vocabulaire",
    "JO_CHOOSE": "emploi--choisir-metier",
    "JO_FIND": "emploi--trouver-emploi",
    "JO_PREPARE": "emploi--preparer-candidature",
    "MO_2W": "mobilite--utiliser-deux-roues",
    "MO_BLK": "mobilite--identifier-freins",
    "MO_HLP": "mobilite--accompagnement-parcours-mobilite",
    "MO-LI": "mobilite--preparer-permis",
    "MO-MA": "mobilite--entretenir-vehicule",
    "MO-MO": "mobilite--se-deplacer-sans-permis-ou-vehicule",
    "MO-VE": "mobilite--louer-acheter-vehicule",
    "MO-WK": "mobilite--reprendre-emploi-formation",
    "RE_EVAL": "remobilisation--identifier-competences",
    "RE_SOCIAL": "remobilisation--lien-social",
    "RE_TRUST": "remobilisation--restaurer-confiance",
    "RE_WELLBEING": "remobilisation--bien-etre",
    "RI_ADM_ACC": "acces-aux-droits--accompagnement-demarches-admin",
    "RI_ASYLUM": "acces-aux-droits--demandeurs-asile-naturalisation",
    "RI_JUD_ACC": "acces-aux-droits--accompagnement-juridique",
    "RI_KNOW": "acces-aux-droits--connaitre-droits",
}

KINDS_MAP = {
    "SU": "accompagnement",
    "RE": "accueil",
    "FI": "aide-financiere",
    "MA": "aide-materielle",
    "WK": "atelier",
    "FO": "formation",
    "IN": "information",
}

LOCATION_MAP = {"RE": "a-distance", "OS": "en-presentiel"}


def rename_enums(apps, schema_editor):
    ServiceSuggestion = apps.get_model("service_suggestions", "ServiceSuggestion")
    for s in ServiceSuggestion.objects.all():
        c = s.contents
        try:
            if c.get("category"):
                c["category"] = CATEGORIES_MAP[c["category"]]
            if c.get("categories"):
                c["categories"] = [CATEGORIES_MAP[cat] for cat in c["categories"]]
            c["subcategories"] = [SUBCATEGORIES_MAP[cat] for cat in c["subcategories"]]
            c["kinds"] = [KINDS_MAP[cat] for cat in c["kinds"]]
            c["location_kinds"] = [LOCATION_MAP[cat] for cat in c["location_kinds"]]
            s.contents = c
            s.save(update_fields=["contents"])
        except KeyError:
            pass


class Migration(migrations.Migration):
    dependencies = [
        ("service_suggestions", "0002_alter_servicesuggestion_options"),
    ]

    operations = [
        migrations.RunPython(rename_enums, reverse_code=migrations.RunPython.noop),
    ]
