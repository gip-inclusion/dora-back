# Generated by Django 4.2.10 on 2024-04-08 15:09

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("structures", "0063_structure_is_obsolete"),
        ("notifications", "0004_alter_notification_task_type"),
    ]

    operations = [
        migrations.AlterField(
            model_name="notification",
            name="counter",
            field=models.IntegerField(default=0, verbose_name="compteur d'exécution"),
        ),
        migrations.AlterField(
            model_name="notification",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, verbose_name="date de création"
            ),
        ),
        migrations.AlterField(
            model_name="notification",
            name="expires_at",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="date d'expiration"
            ),
        ),
        migrations.AlterField(
            model_name="notification",
            name="owner_structure",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="structures.structure",
                verbose_name="structure propriétaire",
            ),
        ),
        migrations.AlterField(
            model_name="notification",
            name="owner_structureputativemember",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="structures.structureputativemember",
                verbose_name="invitation propriétaire",
            ),
        ),
        migrations.AlterField(
            model_name="notification",
            name="owner_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to=settings.AUTH_USER_MODEL,
                verbose_name="utilisateur propriétaire",
            ),
        ),
        migrations.AlterField(
            model_name="notification",
            name="task_type",
            field=models.CharField(
                choices=[
                    ("orphan_structures", "Orphan Structures"),
                    ("service_activation", "Service Activation"),
                    ("invited_users", "Invited Users"),
                    ("self_invited_users", "Self Invited Users"),
                    ("users_without_structure", "Users Without Structure"),
                    ("user_account_deletion", "User Account Deletion"),
                    ("generic_task", "Generic Task"),
                ],
                verbose_name="type de tâche",
            ),
        ),
        migrations.AlterField(
            model_name="notification",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, verbose_name="date de modification"
            ),
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("orphan_structures", "Orphan Structures"),
                            ("service_activation", "Service Activation"),
                            ("invited_users", "Invited Users"),
                            ("self_invited_users", "Self Invited Users"),
                            ("users_without_structure", "Users Without Structure"),
                            ("user_account_deletion", "User Account Deletion"),
                            ("generic_task", "Generic Task"),
                        ],
                        verbose_name="type de tâche",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("complete", "Complete"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        verbose_name="Statut",
                    ),
                ),
                (
                    "counter",
                    models.IntegerField(default=0, verbose_name="compteur d'exécution"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "triggered_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="date de déclenchement"
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="propriétaire"
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="logs",
                        to="notifications.notification",
                        verbose_name="notification parente",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["task_type"], name="notificatio_task_ty_a4ef85_idx"
                    ),
                    models.Index(
                        fields=["status"], name="notificatio_status_a242db_idx"
                    ),
                ],
            },
        ),
    ]
