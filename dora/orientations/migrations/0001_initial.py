# Generated by Django 4.2.3 on 2023-07-10 15:16

import uuid

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("services", "0095_remove_service_is_draft_remove_service_is_suggestion"),
        ("structures", "0060_structure_data_inclusion_source"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Orientation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "query_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "requirements",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=480),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Critères",
                    ),
                ),
                (
                    "situation",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=480),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Situation",
                    ),
                ),
                (
                    "situation_other",
                    models.CharField(
                        blank=True, max_length=480, verbose_name="Situation - autre"
                    ),
                ),
                (
                    "beneficiary_last_name",
                    models.CharField(
                        blank=True, max_length=140, verbose_name="Nom bénéficiaire"
                    ),
                ),
                (
                    "beneficiary_first_name",
                    models.CharField(
                        blank=True, max_length=140, verbose_name="Prénom bénéficiaire"
                    ),
                ),
                (
                    "beneficiary_contact_preferences",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("TELEPHONE", "Téléphone"),
                                ("EMAIL", "E-mail"),
                                ("AUTRE", "Autre"),
                            ],
                            max_length=10,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Préférences de contact",
                    ),
                ),
                (
                    "beneficiary_phone",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Tel bénéficiaire"
                    ),
                ),
                (
                    "beneficiary_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Courriel bénéficiaire"
                    ),
                ),
                (
                    "beneficiary_other_contact_method",
                    models.CharField(
                        blank=True,
                        max_length=280,
                        verbose_name="Autre méthode de contact bénéficiaire",
                    ),
                ),
                (
                    "beneficiary_availability",
                    models.DateField(
                        blank=True, null=True, verbose_name="Disponibilité bénéficiaire"
                    ),
                ),
                (
                    "beneficiary_attachments",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=1024),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Documents joints",
                    ),
                ),
                (
                    "referent_last_name",
                    models.CharField(
                        blank=True, max_length=140, verbose_name="Nom référent"
                    ),
                ),
                (
                    "referent_first_name",
                    models.CharField(
                        blank=True, max_length=140, verbose_name="Prénom référent"
                    ),
                ),
                (
                    "referent_phone",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Tel référent"
                    ),
                ),
                (
                    "referent_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Courriel référent"
                    ),
                ),
                (
                    "orientation_reasons",
                    models.TextField(blank=True, verbose_name="Motif de l'orientation"),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("processing_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OUVERTE", "Ouverte / En cours de traitement"),
                            ("VALIDÉE", "Validée"),
                            ("REFUSÉE", "Refusée"),
                        ],
                        default="OUVERTE",
                        max_length=10,
                    ),
                ),
                (
                    "prescriber",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Préscripteur",
                    ),
                ),
                (
                    "prescriber_structure",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="structures.structure",
                        verbose_name="Structure",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="services.service",
                        verbose_name="Service",
                    ),
                ),
            ],
        ),
    ]
